import{_ as s,o as n,c as a,O as l}from"./chunks/framework.9482e208.js";const F=JSON.parse('{"title":"国内服务器","description":"","frontmatter":{},"headers":[],"relativePath":"setup/tencent_cloud/index.md","filePath":"setup/tencent_cloud/index.md"}'),p={name:"setup/tencent_cloud/index.md"},o=l(`<h1 id="国内服务器" tabindex="-1">国内服务器 <a class="header-anchor" href="#国内服务器" aria-label="Permalink to &quot;国内服务器&quot;">​</a></h1><h2 id="bug-1-gfpgan安装不上" tabindex="-1">BUG_1: gfpgan安装不上 <a class="header-anchor" href="#bug-1-gfpgan安装不上" aria-label="Permalink to &quot;BUG_1: gfpgan安装不上&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#FFCB6B;">Installing</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gfpgan</span></span>
<span class="line"><span style="color:#FFCB6B;">Traceback</span><span style="color:#A6ACCD;"> (most </span><span style="color:#C3E88D;">recent</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">call</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">last</span><span style="color:#A6ACCD;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">File</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">launch.py</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">line</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">352</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">modul</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">prepare_environment</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  File &quot;launch.py&quot;, line 260, in prepare_environment</span></span>
<span class="line"><span style="color:#A6ACCD;">    run_pip</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">f</span><span style="color:#FFCB6B;">&quot;install {gfpgan_package}&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">gfpgan</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">File</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">launch.py</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">line</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">128</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run_pip</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">f</span><span style="color:#FFCB6B;">&#39;&quot;{python}&quot; -m pip {command} --prefer-binary{index_url_line}&#39;</span><span style="color:#FFCB6B;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">desc=f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Installing {desc}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">errdesc=f</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Couldn&#39;t install {desc}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">live=live</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">File</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">launch.py</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">line</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">96</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">raise</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RuntimeError</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">message</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">RuntimeError:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Couldn</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">t install gfpgan.</span></span>
<span class="line"><span style="color:#C3E88D;">Command: &quot;/home/ubuntu/stable-diffusion-webui-master/stable-diffusion-webui/venv/bin/python3&quot; -m pip install git+https://github.com/TencentARC/GFPGAN.git@8d2447a2d918f8eba5a4a01463fd48e45126a379 --prefer-binary</span></span>
<span class="line"><span style="color:#C3E88D;">Error code: 1</span></span>
<span class="line"><span style="color:#C3E88D;">stdout: Looking in indexes: http://mirrors.tencentyun.com/pypi/simple</span></span>
<span class="line"><span style="color:#C3E88D;">Collecting git+https://github.com/TencentARC/GFPGAN.git@8d2447a2d918f8eba5a4a01463fd48e45126a379</span></span>
<span class="line"><span style="color:#C3E88D;">  Cloning https://github.com/TencentARC/GFPGAN.git (to revision 8d2447a2d918f8eba5a4a01463fd48e45126a379) to /tmp/pip-req-build-b7hjvti6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">stderr:   Running command git clone -q https://github.com/TencentARC/GFPGAN.git /tmp/pip-req-build-b7hjvti6</span></span>
<span class="line"><span style="color:#C3E88D;">  remote: Internal Server Error</span></span>
<span class="line"><span style="color:#C3E88D;">  fatal: unable to access </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://github.com/TencentARC/GFPGAN.git/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">: The requested URL returned error: 500</span></span>
<span class="line"><span style="color:#C3E88D;">ERROR: Command errored out with exit status 128: git clone -q https://github.com/TencentARC/GFPGAN.git /tmp/pip-req-build-b7hjvti6 Check the logs for full command output.</span></span></code></pre></div><h3 id="失败策略1-手动从github上下载然后传到服务器安装" tabindex="-1">失败策略1: 手动从github上下载然后传到服务器安装 <a class="header-anchor" href="#失败策略1-手动从github上下载然后传到服务器安装" aria-label="Permalink to &quot;失败策略1: 手动从github上下载然后传到服务器安装&quot;">​</a></h3><p>安装过程还算顺利但是报 很多 WARNING类似下面这样：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">WARNING: The scripts fonttools, pyftmerge, pyftsubset and ttx are installed in &#39;/home/ubuntu/.local/bin&#39; which is not on PATH.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.</span></span></code></pre></div><p>于是</p><p><code>export PATH=$PATH:/home/ubuntu/.local/bin</code></p><p>要想让这个命令永久生效，你需要把它加到你的 shell 初始化脚本中。不同的 shell 有不同的初始化脚本，比如对于 bash，它就是 <code>~/.bashrc</code>；对于 zsh，它就是 <code>~/.zshrc</code>。</p><p>以下是如何将此行添加到 <code>.bashrc</code> 文件中的步骤：</p><ol><li>打开一个终端。</li><li>输入 <code>nano ~/.bashrc</code> 来打开 <code>.bashrc</code> 文件。这里我们使用 nano 编辑器作为例子，你也可以使用你喜欢的任何文本编辑器，比如 vim 或 emacs。</li><li>在文件的最后添加一行：<code>export PATH=$PATH:/home/ubuntu/.local/bin</code>。</li><li>按 <code>Ctrl+O</code> 保存文件，然后按 <code>Ctrl+X</code> 退出 nano。</li><li>为了让这个改动立即生效，你可以运行 <code>source ~/.bashrc</code>。如果你关闭终端并重新打开，这个改动也会自动生效。</li></ol><p>以上步骤对于其他的 shell （比如 zsh）也是类似的，只是文件名可能不同，比如 <code>~/.zshrc</code>。</p><p>没用，运行./webui.sh结果一致。</p><h3 id="失败策略2-怀疑是gfpgan的版本问题" tabindex="-1">失败策略2: 怀疑是gfpgan的版本问题 <a class="header-anchor" href="#失败策略2-怀疑是gfpgan的版本问题" aria-label="Permalink to &quot;失败策略2: 怀疑是gfpgan的版本问题&quot;">​</a></h3><p>cd GFPGAN <code>git checkout 8d2447a2d918f8eba5a4a01463fd48e45126a379</code></p><p>在网站上可以进入到这个版本的项目页面，下载zip然后上传到服务器上，按照首页</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Install basicsr - https://github.com/xinntao/BasicSR</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># We use BasicSR for both training and inference</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">basicsr</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install facexlib - https://github.com/xinntao/facexlib</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># We use face detection and face restoration helper in the facexlib package</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">facexlib</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">requirements.txt</span></span>
<span class="line"><span style="color:#FFCB6B;">python</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">setup.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">develop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># If you want to enhance the background (non-face) regions with Real-ESRGAN,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># you also need to install the realesrgan package</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">realesrgan</span></span></code></pre></div><p>进行到<code>python setup.py develop</code>出现问题</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#FFCB6B;">ubuntu@VM-0-7-ubuntu:~/GFPGAN-8d2447a2$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">python</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">setup.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">develop</span></span>
<span class="line"><span style="color:#FFCB6B;">running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">develop</span></span>
<span class="line"><span style="color:#FFCB6B;">error:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">can</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">t create or remove files in install directory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">The following error occurred while trying to add or remove files in the</span></span>
<span class="line"><span style="color:#C3E88D;">installation directory:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    [Errno 13] Permission denied: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/usr/local/lib/python3.8/dist-packages/test-easy-install-23770.write-test</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">The installation directory you specified (via --install-dir, --prefix, or</span></span>
<span class="line"><span style="color:#C3E88D;">the distutils default setting) was:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    /usr/local/lib/python3.8/dist-packages/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">Perhaps your account does not have write access to this directory?  If the</span></span>
<span class="line"><span style="color:#C3E88D;">installation directory is a system-owned directory, you may need to sign in</span></span>
<span class="line"><span style="color:#C3E88D;">as the administrator or &quot;root&quot; account.  If you do not have administrative</span></span>
<span class="line"><span style="color:#C3E88D;">access to this machine, you may wish to choose a different installation</span></span>
<span class="line"><span style="color:#C3E88D;">directory, preferably one that is listed in your PYTHONPATH environment</span></span>
<span class="line"><span style="color:#C3E88D;">variable.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">For information on other options, you may wish to consult the</span></span>
<span class="line"><span style="color:#C3E88D;">documentation at:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">  https://setuptools.readthedocs.io/en/latest/easy_install.html</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">Please make the appropriate changes for your system and try again.</span></span></code></pre></div><p>改用<code>sudo python setup.py develop</code>顺利执行</p><h3 id="策略3部分成功-核心问题是gfpgan在本地安装好了但是sd所属的虚拟环境没有" tabindex="-1">策略3部分成功: 核心问题是gfpgan在本地安装好了但是sd所属的虚拟环境没有 <a class="header-anchor" href="#策略3部分成功-核心问题是gfpgan在本地安装好了但是sd所属的虚拟环境没有" aria-label="Permalink to &quot;策略3部分成功: 核心问题是gfpgan在本地安装好了但是sd所属的虚拟环境没有&quot;">​</a></h3><p>通过阅读webui.sh：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\n%s\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">delimiter</span><span style="color:#89DDFF;">}&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Create and activate python venv</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\n%s\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">delimiter</span><span style="color:#89DDFF;">}&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">install_dir</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">clone_dir</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\e[1m\\e[31mERROR: Can&#39;t cd to %s/%s/, aborting...\\e[0m</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">install_dir</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">clone_dir</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">venv_dir</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">&quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">python_cmd</span><span style="color:#89DDFF;">}</span><span style="color:#FFCB6B;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">venv</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">venv_dir</span><span style="color:#89DDFF;">}&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    first_launch</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># shellcheck source=/dev/null</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">venv_dir</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#A6ACCD;">/bin/activate </span><span style="color:#89DDFF;">]]</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">source</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">venv_dir</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#C3E88D;">/bin/activate</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\n%s\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">delimiter</span><span style="color:#89DDFF;">}&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\e[1m\\e[31mERROR: Cannot activate python venv, aborting...\\e[0m</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\n%s\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#A6ACCD;">delimiter</span><span style="color:#89DDFF;">}&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span></code></pre></div><blockquote><p>\${venv_dir}的值是venv，我现在只想知道这个虚拟环境路径在哪里</p></blockquote><p>一番搜索总算找到:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#FFCB6B;">ubuntu@VM-0-7-ubuntu:~/stable-diffusion-webui-master/stable-diffusion-webui/venv$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ls</span></span>
<span class="line"><span style="color:#FFCB6B;">bin</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">include</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">lib</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">lib64</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">pyvenv.cfg</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">share</span></span>
<span class="line"><span style="color:#FFCB6B;">ubuntu@VM-0-7-ubuntu:~/stable-diffusion-webui-master/stable-diffusion-webui/venv$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pwd</span></span>
<span class="line"><span style="color:#FFCB6B;">/home/ubuntu/stable-diffusion-webui-master/stable-diffusion-webui/venv</span></span></code></pre></div><p>那么我</p><p><code>source /home/ubuntu/stable-diffusion-webui-master/stable-diffusion-webui/venv/bin/activate</code></p><p>然后再跑（注意切换到gfpgan的目录下！）</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Install basicsr - https://github.com/xinntao/BasicSR</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># We use BasicSR for both training and inference</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">basicsr</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install facexlib - https://github.com/xinntao/facexlib</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># We use face detection and face restoration helper in the facexlib package</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">facexlib</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">requirements.txt</span></span>
<span class="line"><span style="color:#FFCB6B;">python</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">setup.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">develop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># If you want to enhance the background (non-face) regions with Real-ESRGAN,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># you also need to install the realesrgan package</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">realesrgan</span></span></code></pre></div><p>虽然中间报了一系列问题但是感觉基本上还算成功的。</p><p>要从 Python 的虚拟环境中退出，你可以在命令行中输入 <code>deactivate</code> 命令，然后按回车。如下所示：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">deactivate</span></span></code></pre></div><p>运行这个命令后，你将退出当前的虚拟环境，并返回到你的默认 Python 环境。</p><p>之后的几个东西都安装成功了，但是后面还有git clone卡死掉</p><h3 id="策略4其它地方打包好传上去" tabindex="-1">策略4其它地方打包好传上去 <a class="header-anchor" href="#策略4其它地方打包好传上去" aria-label="Permalink to &quot;策略4其它地方打包好传上去&quot;">​</a></h3><p><code>tar -cvf sd.tar sd</code>/</p><p><code>zip -r sd.zip sd/</code></p><p>全部打包太大了下不下来，所以要什么下载什么</p><p>Commit hash: 5ab7f213bec2f816f9c5644becb32eb72c8ffb89 Cloning Taming Transformers into /home/ubuntu/stable-diffusion-webui-master/stable-diffusion-webui/repositories/taming-transformers...</p><p>卡这里了，所以我把repositories打个包变成sd_rep.tar然后传上去解压</p><p>对应目录里面解压</p><p><code>tar -xvf sd_rep.tar</code></p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>国内服务器安装sd的核心问题是网络！</p><p>你访问github有困难,例如安装gfpgan,这个时候可以本地下载了上传上去</p><p>然后按照它主页的办法去安装，但是必须开启虚拟环境！</p><p>这个虚拟环境文件存在sd主目录下的venv里面！</p><p>然后这个弄好了还不行，</p><p>还有七七八八的在sd/rep里面的东西，依然是把现成的上传上去</p><p>然后webui.sh就可以啦。</p><p>关于模型的问题,hf是没被墙的目前，但是c站不行，必须本地中转一下，</p><p>我的办法是用xftp这个 软件上传，耗时比较久一个模型得传个1小时</p>`,53),e=[o];function t(c,r,i,y,C,D){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{F as __pageData,u as default};
